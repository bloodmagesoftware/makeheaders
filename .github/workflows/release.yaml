name: Release Build

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            Automated release based on tag ${{ github.ref_name }}
            See attached binaries for different platforms.
          draft: false
          prerelease: false

  build_binaries:
    name: Build Binaries
    needs: create_release
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            os_name: linux
            arch: amd64
            artifact_name: makeheaders-linux-amd64
            compiler: gcc
          - os: windows-latest
            os_name: windows
            arch: amd64
            artifact_name: makeheaders-windows-amd64.exe
            compiler: gcc
          - os: macos-latest
            os_name: macos
            arch: arm64
            artifact_name: makeheaders-macos-arm64
            compiler: clang

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Compile C program
        run: ${{ matrix.compiler }} makeheaders.c -o ${{ matrix.artifact_name }} "-O2"

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./${{ matrix.artifact_name }}
          asset_name: ${{ matrix.artifact_name }}
          asset_content_type: application/octet-stream
